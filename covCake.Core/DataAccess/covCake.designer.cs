#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace covCake.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="DBcov")]
	public partial class covCakeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertref_Pays(ref_Pays instance);
    partial void Updateref_Pays(ref_Pays instance);
    partial void Deleteref_Pays(ref_Pays instance);
    partial void Insertcov_AbonnementProjet(cov_AbonnementProjet instance);
    partial void Updatecov_AbonnementProjet(cov_AbonnementProjet instance);
    partial void Deletecov_AbonnementProjet(cov_AbonnementProjet instance);
    partial void Insertcov_Album(cov_Album instance);
    partial void Updatecov_Album(cov_Album instance);
    partial void Deletecov_Album(cov_Album instance);
    partial void Insertcov_Photo(cov_Photo instance);
    partial void Updatecov_Photo(cov_Photo instance);
    partial void Deletecov_Photo(cov_Photo instance);
    partial void Insertcov_Residence(cov_Residence instance);
    partial void Updatecov_Residence(cov_Residence instance);
    partial void Deletecov_Residence(cov_Residence instance);
    partial void Insertref_Departement(ref_Departement instance);
    partial void Updateref_Departement(ref_Departement instance);
    partial void Deleteref_Departement(ref_Departement instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertcov_Alerte(cov_Alerte instance);
    partial void Updatecov_Alerte(cov_Alerte instance);
    partial void Deletecov_Alerte(cov_Alerte instance);
    partial void Insertcov_Projet(cov_Projet instance);
    partial void Updatecov_Projet(cov_Projet instance);
    partial void Deletecov_Projet(cov_Projet instance);
    partial void Insertcov_Transport(cov_Transport instance);
    partial void Updatecov_Transport(cov_Transport instance);
    partial void Deletecov_Transport(cov_Transport instance);
    partial void Insertcov_UserProfile(cov_UserProfile instance);
    partial void Updatecov_UserProfile(cov_UserProfile instance);
    partial void Deletecov_UserProfile(cov_UserProfile instance);
    partial void Insertcov_MessagePrive(cov_MessagePrive instance);
    partial void Updatecov_MessagePrive(cov_MessagePrive instance);
    partial void Deletecov_MessagePrive(cov_MessagePrive instance);
    #endregion
		
		public covCakeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public covCakeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public covCakeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public covCakeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ref_Pays> ref_Pays
		{
			get
			{
				return this.GetTable<ref_Pays>();
			}
		}
		
		public System.Data.Linq.Table<cov_AbonnementProjet> cov_AbonnementProjets
		{
			get
			{
				return this.GetTable<cov_AbonnementProjet>();
			}
		}
		
		public System.Data.Linq.Table<cov_Album> cov_Albums
		{
			get
			{
				return this.GetTable<cov_Album>();
			}
		}
		
		public System.Data.Linq.Table<cov_Photo> cov_Photos
		{
			get
			{
				return this.GetTable<cov_Photo>();
			}
		}
		
		public System.Data.Linq.Table<cov_Residence> cov_Residences
		{
			get
			{
				return this.GetTable<cov_Residence>();
			}
		}
		
		public System.Data.Linq.Table<cov_UserAlbum> cov_UserAlbums
		{
			get
			{
				return this.GetTable<cov_UserAlbum>();
			}
		}
		
		public System.Data.Linq.Table<ref_Departement> ref_Departements
		{
			get
			{
				return this.GetTable<ref_Departement>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<cov_Alerte> cov_Alertes
		{
			get
			{
				return this.GetTable<cov_Alerte>();
			}
		}
		
		public System.Data.Linq.Table<cov_Projet> cov_Projets
		{
			get
			{
				return this.GetTable<cov_Projet>();
			}
		}
		
		public System.Data.Linq.Table<cov_Transport> cov_Transports
		{
			get
			{
				return this.GetTable<cov_Transport>();
			}
		}
		
		public System.Data.Linq.Table<cov_UserProfile> cov_UserProfiles
		{
			get
			{
				return this.GetTable<cov_UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<cov_MessagePrive> cov_MessagePrives
		{
			get
			{
				return this.GetTable<cov_MessagePrive>();
			}
		}
	}
	
	[Table(Name="dbo.ref_Pays")]
	public partial class ref_Pays : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPays;
		
		private string _LibellePays;
		
		private string _LibelleEngPays;
		
		private string _CodePays;
		
		private string _CodePays2;
		
		private string _CapitalePays;
		
		private EntitySet<cov_Alerte> _cov_Alertes;
		
		private EntitySet<cov_Projet> _cov_Projets;
		
		private EntitySet<cov_Projet> _cov_Projets1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPaysChanging(int value);
    partial void OnIdPaysChanged();
    partial void OnLibellePaysChanging(string value);
    partial void OnLibellePaysChanged();
    partial void OnLibelleEngPaysChanging(string value);
    partial void OnLibelleEngPaysChanged();
    partial void OnCodePaysChanging(string value);
    partial void OnCodePaysChanged();
    partial void OnCodePays2Changing(string value);
    partial void OnCodePays2Changed();
    partial void OnCapitalePaysChanging(string value);
    partial void OnCapitalePaysChanged();
    #endregion
		
		public ref_Pays()
		{
			this._cov_Alertes = new EntitySet<cov_Alerte>(new Action<cov_Alerte>(this.attach_cov_Alertes), new Action<cov_Alerte>(this.detach_cov_Alertes));
			this._cov_Projets = new EntitySet<cov_Projet>(new Action<cov_Projet>(this.attach_cov_Projets), new Action<cov_Projet>(this.detach_cov_Projets));
			this._cov_Projets1 = new EntitySet<cov_Projet>(new Action<cov_Projet>(this.attach_cov_Projets1), new Action<cov_Projet>(this.detach_cov_Projets1));
			OnCreated();
		}
		
		[Column(Storage="_IdPays", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdPays
		{
			get
			{
				return this._IdPays;
			}
			set
			{
				if ((this._IdPays != value))
				{
					this.OnIdPaysChanging(value);
					this.SendPropertyChanging();
					this._IdPays = value;
					this.SendPropertyChanged("IdPays");
					this.OnIdPaysChanged();
				}
			}
		}
		
		[Column(Storage="_LibellePays", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LibellePays
		{
			get
			{
				return this._LibellePays;
			}
			set
			{
				if ((this._LibellePays != value))
				{
					this.OnLibellePaysChanging(value);
					this.SendPropertyChanging();
					this._LibellePays = value;
					this.SendPropertyChanged("LibellePays");
					this.OnLibellePaysChanged();
				}
			}
		}
		
		[Column(Storage="_LibelleEngPays", DbType="NVarChar(50)")]
		public string LibelleEngPays
		{
			get
			{
				return this._LibelleEngPays;
			}
			set
			{
				if ((this._LibelleEngPays != value))
				{
					this.OnLibelleEngPaysChanging(value);
					this.SendPropertyChanging();
					this._LibelleEngPays = value;
					this.SendPropertyChanged("LibelleEngPays");
					this.OnLibelleEngPaysChanged();
				}
			}
		}
		
		[Column(Storage="_CodePays", DbType="VarChar(3)")]
		public string CodePays
		{
			get
			{
				return this._CodePays;
			}
			set
			{
				if ((this._CodePays != value))
				{
					this.OnCodePaysChanging(value);
					this.SendPropertyChanging();
					this._CodePays = value;
					this.SendPropertyChanged("CodePays");
					this.OnCodePaysChanged();
				}
			}
		}
		
		[Column(Storage="_CodePays2", DbType="VarChar(3)")]
		public string CodePays2
		{
			get
			{
				return this._CodePays2;
			}
			set
			{
				if ((this._CodePays2 != value))
				{
					this.OnCodePays2Changing(value);
					this.SendPropertyChanging();
					this._CodePays2 = value;
					this.SendPropertyChanged("CodePays2");
					this.OnCodePays2Changed();
				}
			}
		}
		
		[Column(Storage="_CapitalePays", DbType="NVarChar(250)")]
		public string CapitalePays
		{
			get
			{
				return this._CapitalePays;
			}
			set
			{
				if ((this._CapitalePays != value))
				{
					this.OnCapitalePaysChanging(value);
					this.SendPropertyChanging();
					this._CapitalePays = value;
					this.SendPropertyChanged("CapitalePays");
					this.OnCapitalePaysChanged();
				}
			}
		}
		
		[Association(Name="ref_Pays_cov_Alerte", Storage="_cov_Alertes", ThisKey="IdPays", OtherKey="IdPays")]
		public EntitySet<cov_Alerte> cov_Alertes
		{
			get
			{
				return this._cov_Alertes;
			}
			set
			{
				this._cov_Alertes.Assign(value);
			}
		}
		
		[Association(Name="ref_Pays_cov_Projet", Storage="_cov_Projets", ThisKey="IdPays", OtherKey="IdPaysArrive")]
		public EntitySet<cov_Projet> cov_Projets
		{
			get
			{
				return this._cov_Projets;
			}
			set
			{
				this._cov_Projets.Assign(value);
			}
		}
		
		[Association(Name="ref_Pays_cov_Projet1", Storage="_cov_Projets1", ThisKey="IdPays", OtherKey="IdPaysDepart")]
		public EntitySet<cov_Projet> cov_Projets1
		{
			get
			{
				return this._cov_Projets1;
			}
			set
			{
				this._cov_Projets1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cov_Alertes(cov_Alerte entity)
		{
			this.SendPropertyChanging();
			entity.ref_Pays = this;
		}
		
		private void detach_cov_Alertes(cov_Alerte entity)
		{
			this.SendPropertyChanging();
			entity.ref_Pays = null;
		}
		
		private void attach_cov_Projets(cov_Projet entity)
		{
			this.SendPropertyChanging();
			entity.ref_Pays = this;
		}
		
		private void detach_cov_Projets(cov_Projet entity)
		{
			this.SendPropertyChanging();
			entity.ref_Pays = null;
		}
		
		private void attach_cov_Projets1(cov_Projet entity)
		{
			this.SendPropertyChanging();
			entity.ref_Pays1 = this;
		}
		
		private void detach_cov_Projets1(cov_Projet entity)
		{
			this.SendPropertyChanging();
			entity.ref_Pays1 = null;
		}
	}
	
	[Table(Name="dbo.cov_AbonnementProjet")]
	public partial class cov_AbonnementProjet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProjet;
		
		private System.Guid _UserId;
		
		private System.DateTime _DateAbonnement;
		
		private EntityRef<cov_Projet> _cov_Projet;
		
		private EntityRef<cov_UserProfile> _cov_UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProjetChanging(int value);
    partial void OnIdProjetChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnDateAbonnementChanging(System.DateTime value);
    partial void OnDateAbonnementChanged();
    #endregion
		
		public cov_AbonnementProjet()
		{
			this._cov_Projet = default(EntityRef<cov_Projet>);
			this._cov_UserProfile = default(EntityRef<cov_UserProfile>);
			OnCreated();
		}
		
		[Column(Storage="_IdProjet", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProjet
		{
			get
			{
				return this._IdProjet;
			}
			set
			{
				if ((this._IdProjet != value))
				{
					if (this._cov_Projet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProjetChanging(value);
					this.SendPropertyChanging();
					this._IdProjet = value;
					this.SendPropertyChanged("IdProjet");
					this.OnIdProjetChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._cov_UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_DateAbonnement", DbType="DateTime NOT NULL")]
		public System.DateTime DateAbonnement
		{
			get
			{
				return this._DateAbonnement;
			}
			set
			{
				if ((this._DateAbonnement != value))
				{
					this.OnDateAbonnementChanging(value);
					this.SendPropertyChanging();
					this._DateAbonnement = value;
					this.SendPropertyChanged("DateAbonnement");
					this.OnDateAbonnementChanged();
				}
			}
		}
		
		[Association(Name="cov_Projet_cov_AbonnementProjet", Storage="_cov_Projet", ThisKey="IdProjet", OtherKey="IdProjet", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public cov_Projet cov_Projet
		{
			get
			{
				return this._cov_Projet.Entity;
			}
			set
			{
				cov_Projet previousValue = this._cov_Projet.Entity;
				if (((previousValue != value) 
							|| (this._cov_Projet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_Projet.Entity = null;
						previousValue.cov_AbonnementProjets.Remove(this);
					}
					this._cov_Projet.Entity = value;
					if ((value != null))
					{
						value.cov_AbonnementProjets.Add(this);
						this._IdProjet = value.IdProjet;
					}
					else
					{
						this._IdProjet = default(int);
					}
					this.SendPropertyChanged("cov_Projet");
				}
			}
		}
		
		[Association(Name="cov_UserProfile_cov_AbonnementProjet", Storage="_cov_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public cov_UserProfile cov_UserProfile
		{
			get
			{
				return this._cov_UserProfile.Entity;
			}
			set
			{
				cov_UserProfile previousValue = this._cov_UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._cov_UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_UserProfile.Entity = null;
						previousValue.cov_AbonnementProjets.Remove(this);
					}
					this._cov_UserProfile.Entity = value;
					if ((value != null))
					{
						value.cov_AbonnementProjets.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("cov_UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.cov_Album")]
	public partial class cov_Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AlbumId;
		
		private string _NomAlbum;
		
		private string _Description;
		
		private System.DateTime _DateCreation;
		
		private EntitySet<cov_Photo> _cov_Photos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIdChanging(System.Guid value);
    partial void OnAlbumIdChanged();
    partial void OnNomAlbumChanging(string value);
    partial void OnNomAlbumChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreationChanging(System.DateTime value);
    partial void OnDateCreationChanged();
    #endregion
		
		public cov_Album()
		{
			this._cov_Photos = new EntitySet<cov_Photo>(new Action<cov_Photo>(this.attach_cov_Photos), new Action<cov_Photo>(this.detach_cov_Photos));
			OnCreated();
		}
		
		[Column(Storage="_AlbumId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[Column(Storage="_NomAlbum", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NomAlbum
		{
			get
			{
				return this._NomAlbum;
			}
			set
			{
				if ((this._NomAlbum != value))
				{
					this.OnNomAlbumChanging(value);
					this.SendPropertyChanging();
					this._NomAlbum = value;
					this.SendPropertyChanged("NomAlbum");
					this.OnNomAlbumChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this.OnDateCreationChanging(value);
					this.SendPropertyChanging();
					this._DateCreation = value;
					this.SendPropertyChanged("DateCreation");
					this.OnDateCreationChanged();
				}
			}
		}
		
		[Association(Name="cov_Album_cov_Photo", Storage="_cov_Photos", ThisKey="AlbumId", OtherKey="AlbumId")]
		public EntitySet<cov_Photo> cov_Photos
		{
			get
			{
				return this._cov_Photos;
			}
			set
			{
				this._cov_Photos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cov_Photos(cov_Photo entity)
		{
			this.SendPropertyChanging();
			entity.cov_Album = this;
		}
		
		private void detach_cov_Photos(cov_Photo entity)
		{
			this.SendPropertyChanging();
			entity.cov_Album = null;
		}
	}
	
	[Table(Name="dbo.cov_Photo")]
	public partial class cov_Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PhotoId;
		
		private System.Guid _AlbumId;
		
		private string _FilePath;
		
		private string _ThumbPath;
		
		private System.DateTime _DateCreation;
		
		private EntityRef<cov_Album> _cov_Album;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoIdChanging(System.Guid value);
    partial void OnPhotoIdChanged();
    partial void OnAlbumIdChanging(System.Guid value);
    partial void OnAlbumIdChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    partial void OnDateCreationChanging(System.DateTime value);
    partial void OnDateCreationChanged();
    #endregion
		
		public cov_Photo()
		{
			this._cov_Album = default(EntityRef<cov_Album>);
			OnCreated();
		}
		
		[Column(Storage="_PhotoId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlbumId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					if (this._cov_Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[Column(Storage="_FilePath", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Column(Storage="_ThumbPath", DbType="VarChar(MAX)")]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this.OnDateCreationChanging(value);
					this.SendPropertyChanging();
					this._DateCreation = value;
					this.SendPropertyChanged("DateCreation");
					this.OnDateCreationChanged();
				}
			}
		}
		
		[Association(Name="cov_Album_cov_Photo", Storage="_cov_Album", ThisKey="AlbumId", OtherKey="AlbumId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public cov_Album cov_Album
		{
			get
			{
				return this._cov_Album.Entity;
			}
			set
			{
				cov_Album previousValue = this._cov_Album.Entity;
				if (((previousValue != value) 
							|| (this._cov_Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_Album.Entity = null;
						previousValue.cov_Photos.Remove(this);
					}
					this._cov_Album.Entity = value;
					if ((value != null))
					{
						value.cov_Photos.Add(this);
						this._AlbumId = value.AlbumId;
					}
					else
					{
						this._AlbumId = default(System.Guid);
					}
					this.SendPropertyChanged("cov_Album");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.cov_Residence")]
	public partial class cov_Residence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdResidence;
		
		private string _TypeResidence;
		
		private string _AdresseResidence;
		
		private double _Prix;
		
		private System.Nullable<int> _MaxHotes;
		
		private EntitySet<cov_Projet> _cov_Projets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdResidenceChanging(int value);
    partial void OnIdResidenceChanged();
    partial void OnTypeResidenceChanging(string value);
    partial void OnTypeResidenceChanged();
    partial void OnAdresseResidenceChanging(string value);
    partial void OnAdresseResidenceChanged();
    partial void OnPrixChanging(double value);
    partial void OnPrixChanged();
    partial void OnMaxHotesChanging(System.Nullable<int> value);
    partial void OnMaxHotesChanged();
    #endregion
		
		public cov_Residence()
		{
			this._cov_Projets = new EntitySet<cov_Projet>(new Action<cov_Projet>(this.attach_cov_Projets), new Action<cov_Projet>(this.detach_cov_Projets));
			OnCreated();
		}
		
		[Column(Storage="_IdResidence", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdResidence
		{
			get
			{
				return this._IdResidence;
			}
			set
			{
				if ((this._IdResidence != value))
				{
					this.OnIdResidenceChanging(value);
					this.SendPropertyChanging();
					this._IdResidence = value;
					this.SendPropertyChanged("IdResidence");
					this.OnIdResidenceChanged();
				}
			}
		}
		
		[Column(Storage="_TypeResidence", DbType="NVarChar(MAX)")]
		public string TypeResidence
		{
			get
			{
				return this._TypeResidence;
			}
			set
			{
				if ((this._TypeResidence != value))
				{
					this.OnTypeResidenceChanging(value);
					this.SendPropertyChanging();
					this._TypeResidence = value;
					this.SendPropertyChanged("TypeResidence");
					this.OnTypeResidenceChanged();
				}
			}
		}
		
		[Column(Storage="_AdresseResidence", DbType="NVarChar(MAX)")]
		public string AdresseResidence
		{
			get
			{
				return this._AdresseResidence;
			}
			set
			{
				if ((this._AdresseResidence != value))
				{
					this.OnAdresseResidenceChanging(value);
					this.SendPropertyChanging();
					this._AdresseResidence = value;
					this.SendPropertyChanged("AdresseResidence");
					this.OnAdresseResidenceChanged();
				}
			}
		}
		
		[Column(Storage="_Prix", DbType="Float NOT NULL")]
		public double Prix
		{
			get
			{
				return this._Prix;
			}
			set
			{
				if ((this._Prix != value))
				{
					this.OnPrixChanging(value);
					this.SendPropertyChanging();
					this._Prix = value;
					this.SendPropertyChanged("Prix");
					this.OnPrixChanged();
				}
			}
		}
		
		[Column(Storage="_MaxHotes", DbType="Int")]
		public System.Nullable<int> MaxHotes
		{
			get
			{
				return this._MaxHotes;
			}
			set
			{
				if ((this._MaxHotes != value))
				{
					this.OnMaxHotesChanging(value);
					this.SendPropertyChanging();
					this._MaxHotes = value;
					this.SendPropertyChanged("MaxHotes");
					this.OnMaxHotesChanged();
				}
			}
		}
		
		[Association(Name="cov_Residence_cov_Projet", Storage="_cov_Projets", ThisKey="IdResidence", OtherKey="IdResidence")]
		public EntitySet<cov_Projet> cov_Projets
		{
			get
			{
				return this._cov_Projets;
			}
			set
			{
				this._cov_Projets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cov_Projets(cov_Projet entity)
		{
			this.SendPropertyChanging();
			entity.cov_Residence = this;
		}
		
		private void detach_cov_Projets(cov_Projet entity)
		{
			this.SendPropertyChanging();
			entity.cov_Residence = null;
		}
	}
	
	[Table(Name="dbo.cov_UserAlbum")]
	public partial class cov_UserAlbum
	{
		
		private System.Guid _AlbumId;
		
		private System.Guid _UserId;
		
		public cov_UserAlbum()
		{
		}
		
		[Column(Storage="_AlbumId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					this._AlbumId = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ref_Departements")]
	public partial class ref_Departement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumDept;
		
		private string _NumRegion;
		
		private string _NomDept;
		
		private EntitySet<cov_UserProfile> _cov_UserProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumDeptChanging(string value);
    partial void OnNumDeptChanged();
    partial void OnNumRegionChanging(string value);
    partial void OnNumRegionChanged();
    partial void OnNomDeptChanging(string value);
    partial void OnNomDeptChanged();
    #endregion
		
		public ref_Departement()
		{
			this._cov_UserProfiles = new EntitySet<cov_UserProfile>(new Action<cov_UserProfile>(this.attach_cov_UserProfiles), new Action<cov_UserProfile>(this.detach_cov_UserProfiles));
			OnCreated();
		}
		
		[Column(Storage="_NumDept", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumDept
		{
			get
			{
				return this._NumDept;
			}
			set
			{
				if ((this._NumDept != value))
				{
					this.OnNumDeptChanging(value);
					this.SendPropertyChanging();
					this._NumDept = value;
					this.SendPropertyChanged("NumDept");
					this.OnNumDeptChanged();
				}
			}
		}
		
		[Column(Storage="_NumRegion", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string NumRegion
		{
			get
			{
				return this._NumRegion;
			}
			set
			{
				if ((this._NumRegion != value))
				{
					this.OnNumRegionChanging(value);
					this.SendPropertyChanging();
					this._NumRegion = value;
					this.SendPropertyChanged("NumRegion");
					this.OnNumRegionChanged();
				}
			}
		}
		
		[Column(Storage="_NomDept", DbType="VarChar(50)")]
		public string NomDept
		{
			get
			{
				return this._NomDept;
			}
			set
			{
				if ((this._NomDept != value))
				{
					this.OnNomDeptChanging(value);
					this.SendPropertyChanging();
					this._NomDept = value;
					this.SendPropertyChanged("NomDept");
					this.OnNomDeptChanged();
				}
			}
		}
		
		[Association(Name="ref_Departement_cov_UserProfile", Storage="_cov_UserProfiles", ThisKey="NumDept", OtherKey="NumDept")]
		public EntitySet<cov_UserProfile> cov_UserProfiles
		{
			get
			{
				return this._cov_UserProfiles;
			}
			set
			{
				this._cov_UserProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cov_UserProfiles(cov_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.ref_Departement = this;
		}
		
		private void detach_cov_UserProfiles(cov_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.ref_Departement = null;
		}
	}
	
	[Table(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<cov_UserProfile> _cov_UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._cov_UserProfile = default(EntityRef<cov_UserProfile>);
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[Association(Name="aspnet_User_cov_UserProfile", Storage="_cov_UserProfile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public cov_UserProfile cov_UserProfile
		{
			get
			{
				return this._cov_UserProfile.Entity;
			}
			set
			{
				cov_UserProfile previousValue = this._cov_UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._cov_UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_UserProfile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._cov_UserProfile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("cov_UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.cov_Alerte")]
	public partial class cov_Alerte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAlerte;
		
		private System.Guid _UserId;
		
		private System.Nullable<int> _IdPays;
		
		private string _VilleArrive;
		
		private System.Nullable<int> _NbJours;
		
		private System.Nullable<System.DateTime> _DateDebutProjet;
		
		private System.Nullable<System.DateTime> _PeriodeDebut;
		
		private System.Nullable<System.DateTime> _PeriodeFin;
		
		private System.DateTime _DateCreation;
		
		private System.DateTime _DateDernierEnvoi;
		
		private EntityRef<ref_Pays> _ref_Pays;
		
		private EntityRef<cov_UserProfile> _cov_UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAlerteChanging(int value);
    partial void OnIdAlerteChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIdPaysChanging(System.Nullable<int> value);
    partial void OnIdPaysChanged();
    partial void OnVilleArriveChanging(string value);
    partial void OnVilleArriveChanged();
    partial void OnNbJoursChanging(System.Nullable<int> value);
    partial void OnNbJoursChanged();
    partial void OnDateDebutProjetChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDebutProjetChanged();
    partial void OnPeriodeDebutChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodeDebutChanged();
    partial void OnPeriodeFinChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodeFinChanged();
    partial void OnDateCreationChanging(System.DateTime value);
    partial void OnDateCreationChanged();
    partial void OnDateDernierEnvoiChanging(System.DateTime value);
    partial void OnDateDernierEnvoiChanged();
    #endregion
		
		public cov_Alerte()
		{
			this._ref_Pays = default(EntityRef<ref_Pays>);
			this._cov_UserProfile = default(EntityRef<cov_UserProfile>);
			OnCreated();
		}
		
		[Column(Storage="_IdAlerte", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAlerte
		{
			get
			{
				return this._IdAlerte;
			}
			set
			{
				if ((this._IdAlerte != value))
				{
					this.OnIdAlerteChanging(value);
					this.SendPropertyChanging();
					this._IdAlerte = value;
					this.SendPropertyChanged("IdAlerte");
					this.OnIdAlerteChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._cov_UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_IdPays", DbType="Int")]
		public System.Nullable<int> IdPays
		{
			get
			{
				return this._IdPays;
			}
			set
			{
				if ((this._IdPays != value))
				{
					if (this._ref_Pays.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPaysChanging(value);
					this.SendPropertyChanging();
					this._IdPays = value;
					this.SendPropertyChanged("IdPays");
					this.OnIdPaysChanged();
				}
			}
		}
		
		[Column(Storage="_VilleArrive", DbType="VarChar(256)")]
		public string VilleArrive
		{
			get
			{
				return this._VilleArrive;
			}
			set
			{
				if ((this._VilleArrive != value))
				{
					this.OnVilleArriveChanging(value);
					this.SendPropertyChanging();
					this._VilleArrive = value;
					this.SendPropertyChanged("VilleArrive");
					this.OnVilleArriveChanged();
				}
			}
		}
		
		[Column(Storage="_NbJours", DbType="Int")]
		public System.Nullable<int> NbJours
		{
			get
			{
				return this._NbJours;
			}
			set
			{
				if ((this._NbJours != value))
				{
					this.OnNbJoursChanging(value);
					this.SendPropertyChanging();
					this._NbJours = value;
					this.SendPropertyChanged("NbJours");
					this.OnNbJoursChanged();
				}
			}
		}
		
		[Column(Storage="_DateDebutProjet", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDebutProjet
		{
			get
			{
				return this._DateDebutProjet;
			}
			set
			{
				if ((this._DateDebutProjet != value))
				{
					this.OnDateDebutProjetChanging(value);
					this.SendPropertyChanging();
					this._DateDebutProjet = value;
					this.SendPropertyChanged("DateDebutProjet");
					this.OnDateDebutProjetChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodeDebut", DbType="DateTime")]
		public System.Nullable<System.DateTime> PeriodeDebut
		{
			get
			{
				return this._PeriodeDebut;
			}
			set
			{
				if ((this._PeriodeDebut != value))
				{
					this.OnPeriodeDebutChanging(value);
					this.SendPropertyChanging();
					this._PeriodeDebut = value;
					this.SendPropertyChanged("PeriodeDebut");
					this.OnPeriodeDebutChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodeFin", DbType="DateTime")]
		public System.Nullable<System.DateTime> PeriodeFin
		{
			get
			{
				return this._PeriodeFin;
			}
			set
			{
				if ((this._PeriodeFin != value))
				{
					this.OnPeriodeFinChanging(value);
					this.SendPropertyChanging();
					this._PeriodeFin = value;
					this.SendPropertyChanged("PeriodeFin");
					this.OnPeriodeFinChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this.OnDateCreationChanging(value);
					this.SendPropertyChanging();
					this._DateCreation = value;
					this.SendPropertyChanged("DateCreation");
					this.OnDateCreationChanged();
				}
			}
		}
		
		[Column(Storage="_DateDernierEnvoi", DbType="DateTime NOT NULL")]
		public System.DateTime DateDernierEnvoi
		{
			get
			{
				return this._DateDernierEnvoi;
			}
			set
			{
				if ((this._DateDernierEnvoi != value))
				{
					this.OnDateDernierEnvoiChanging(value);
					this.SendPropertyChanging();
					this._DateDernierEnvoi = value;
					this.SendPropertyChanged("DateDernierEnvoi");
					this.OnDateDernierEnvoiChanged();
				}
			}
		}
		
		[Association(Name="ref_Pays_cov_Alerte", Storage="_ref_Pays", ThisKey="IdPays", OtherKey="IdPays", IsForeignKey=true)]
		public ref_Pays ref_Pays
		{
			get
			{
				return this._ref_Pays.Entity;
			}
			set
			{
				ref_Pays previousValue = this._ref_Pays.Entity;
				if (((previousValue != value) 
							|| (this._ref_Pays.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ref_Pays.Entity = null;
						previousValue.cov_Alertes.Remove(this);
					}
					this._ref_Pays.Entity = value;
					if ((value != null))
					{
						value.cov_Alertes.Add(this);
						this._IdPays = value.IdPays;
					}
					else
					{
						this._IdPays = default(Nullable<int>);
					}
					this.SendPropertyChanged("ref_Pays");
				}
			}
		}
		
		[Association(Name="cov_UserProfile_cov_Alerte", Storage="_cov_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public cov_UserProfile cov_UserProfile
		{
			get
			{
				return this._cov_UserProfile.Entity;
			}
			set
			{
				cov_UserProfile previousValue = this._cov_UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._cov_UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_UserProfile.Entity = null;
						previousValue.cov_Alertes.Remove(this);
					}
					this._cov_UserProfile.Entity = value;
					if ((value != null))
					{
						value.cov_Alertes.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("cov_UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.cov_Projet")]
	public partial class cov_Projet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProjet;
		
		private int _IdPaysDepart;
		
		private int _IdPaysArrive;
		
		private string _VilleDepart;
		
		private string _VilleArrive;
		
		private System.Nullable<System.DateTime> _DateDebut;
		
		private System.Nullable<System.DateTime> _DateFin;
		
		private bool _Incertain;
		
		private int _NbJours;
		
		private string _Commentaire;
		
		private bool _Realise;
		
		private System.Nullable<int> _IdResidence;
		
		private System.Nullable<int> _IdTransport;
		
		private System.Guid _OwnerUserId;
		
		private int _Visites;
		
		private System.DateTime _DateCreation;
		
		private System.DateTime _DateModification;
		
		private EntitySet<cov_AbonnementProjet> _cov_AbonnementProjets;
		
		private EntitySet<cov_Transport> _cov_Transports;
		
		private EntitySet<cov_MessagePrive> _cov_MessagePrives;
		
		private EntityRef<cov_Residence> _cov_Residence;
		
		private EntityRef<ref_Pays> _ref_Pays;
		
		private EntityRef<ref_Pays> _ref_Pays1;
		
		private EntityRef<cov_UserProfile> _cov_UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProjetChanging(int value);
    partial void OnIdProjetChanged();
    partial void OnIdPaysDepartChanging(int value);
    partial void OnIdPaysDepartChanged();
    partial void OnIdPaysArriveChanging(int value);
    partial void OnIdPaysArriveChanged();
    partial void OnVilleDepartChanging(string value);
    partial void OnVilleDepartChanged();
    partial void OnVilleArriveChanging(string value);
    partial void OnVilleArriveChanged();
    partial void OnDateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFinChanged();
    partial void OnIncertainChanging(bool value);
    partial void OnIncertainChanged();
    partial void OnNbJoursChanging(int value);
    partial void OnNbJoursChanged();
    partial void OnCommentaireChanging(string value);
    partial void OnCommentaireChanged();
    partial void OnRealiseChanging(bool value);
    partial void OnRealiseChanged();
    partial void OnIdResidenceChanging(System.Nullable<int> value);
    partial void OnIdResidenceChanged();
    partial void OnIdTransportChanging(System.Nullable<int> value);
    partial void OnIdTransportChanged();
    partial void OnOwnerUserIdChanging(System.Guid value);
    partial void OnOwnerUserIdChanged();
    partial void OnVisitesChanging(int value);
    partial void OnVisitesChanged();
    partial void OnDateCreationChanging(System.DateTime value);
    partial void OnDateCreationChanged();
    partial void OnDateModificationChanging(System.DateTime value);
    partial void OnDateModificationChanged();
    #endregion
		
		public cov_Projet()
		{
			this._cov_AbonnementProjets = new EntitySet<cov_AbonnementProjet>(new Action<cov_AbonnementProjet>(this.attach_cov_AbonnementProjets), new Action<cov_AbonnementProjet>(this.detach_cov_AbonnementProjets));
			this._cov_Transports = new EntitySet<cov_Transport>(new Action<cov_Transport>(this.attach_cov_Transports), new Action<cov_Transport>(this.detach_cov_Transports));
			this._cov_MessagePrives = new EntitySet<cov_MessagePrive>(new Action<cov_MessagePrive>(this.attach_cov_MessagePrives), new Action<cov_MessagePrive>(this.detach_cov_MessagePrives));
			this._cov_Residence = default(EntityRef<cov_Residence>);
			this._ref_Pays = default(EntityRef<ref_Pays>);
			this._ref_Pays1 = default(EntityRef<ref_Pays>);
			this._cov_UserProfile = default(EntityRef<cov_UserProfile>);
			OnCreated();
		}
		
		[Column(Storage="_IdProjet", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProjet
		{
			get
			{
				return this._IdProjet;
			}
			set
			{
				if ((this._IdProjet != value))
				{
					this.OnIdProjetChanging(value);
					this.SendPropertyChanging();
					this._IdProjet = value;
					this.SendPropertyChanged("IdProjet");
					this.OnIdProjetChanged();
				}
			}
		}
		
		[Column(Storage="_IdPaysDepart", DbType="Int NOT NULL")]
		public int IdPaysDepart
		{
			get
			{
				return this._IdPaysDepart;
			}
			set
			{
				if ((this._IdPaysDepart != value))
				{
					if (this._ref_Pays1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPaysDepartChanging(value);
					this.SendPropertyChanging();
					this._IdPaysDepart = value;
					this.SendPropertyChanged("IdPaysDepart");
					this.OnIdPaysDepartChanged();
				}
			}
		}
		
		[Column(Storage="_IdPaysArrive", DbType="Int NOT NULL")]
		public int IdPaysArrive
		{
			get
			{
				return this._IdPaysArrive;
			}
			set
			{
				if ((this._IdPaysArrive != value))
				{
					if (this._ref_Pays.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPaysArriveChanging(value);
					this.SendPropertyChanging();
					this._IdPaysArrive = value;
					this.SendPropertyChanged("IdPaysArrive");
					this.OnIdPaysArriveChanged();
				}
			}
		}
		
		[Column(Storage="_VilleDepart", DbType="NVarChar(255)")]
		public string VilleDepart
		{
			get
			{
				return this._VilleDepart;
			}
			set
			{
				if ((this._VilleDepart != value))
				{
					this.OnVilleDepartChanging(value);
					this.SendPropertyChanging();
					this._VilleDepart = value;
					this.SendPropertyChanged("VilleDepart");
					this.OnVilleDepartChanged();
				}
			}
		}
		
		[Column(Storage="_VilleArrive", DbType="NVarChar(255)")]
		public string VilleArrive
		{
			get
			{
				return this._VilleArrive;
			}
			set
			{
				if ((this._VilleArrive != value))
				{
					this.OnVilleArriveChanging(value);
					this.SendPropertyChanging();
					this._VilleArrive = value;
					this.SendPropertyChanged("VilleArrive");
					this.OnVilleArriveChanged();
				}
			}
		}
		
		[Column(Storage="_DateDebut", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[Column(Storage="_DateFin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[Column(Storage="_Incertain", DbType="Bit NOT NULL")]
		public bool Incertain
		{
			get
			{
				return this._Incertain;
			}
			set
			{
				if ((this._Incertain != value))
				{
					this.OnIncertainChanging(value);
					this.SendPropertyChanging();
					this._Incertain = value;
					this.SendPropertyChanged("Incertain");
					this.OnIncertainChanged();
				}
			}
		}
		
		[Column(Storage="_NbJours", DbType="Int NOT NULL")]
		public int NbJours
		{
			get
			{
				return this._NbJours;
			}
			set
			{
				if ((this._NbJours != value))
				{
					this.OnNbJoursChanging(value);
					this.SendPropertyChanging();
					this._NbJours = value;
					this.SendPropertyChanged("NbJours");
					this.OnNbJoursChanged();
				}
			}
		}
		
		[Column(Storage="_Commentaire", DbType="NVarChar(MAX)")]
		public string Commentaire
		{
			get
			{
				return this._Commentaire;
			}
			set
			{
				if ((this._Commentaire != value))
				{
					this.OnCommentaireChanging(value);
					this.SendPropertyChanging();
					this._Commentaire = value;
					this.SendPropertyChanged("Commentaire");
					this.OnCommentaireChanged();
				}
			}
		}
		
		[Column(Storage="_Realise", DbType="Bit NOT NULL")]
		public bool Realise
		{
			get
			{
				return this._Realise;
			}
			set
			{
				if ((this._Realise != value))
				{
					this.OnRealiseChanging(value);
					this.SendPropertyChanging();
					this._Realise = value;
					this.SendPropertyChanged("Realise");
					this.OnRealiseChanged();
				}
			}
		}
		
		[Column(Storage="_IdResidence", DbType="Int")]
		public System.Nullable<int> IdResidence
		{
			get
			{
				return this._IdResidence;
			}
			set
			{
				if ((this._IdResidence != value))
				{
					if (this._cov_Residence.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdResidenceChanging(value);
					this.SendPropertyChanging();
					this._IdResidence = value;
					this.SendPropertyChanged("IdResidence");
					this.OnIdResidenceChanged();
				}
			}
		}
		
		[Column(Storage="_IdTransport", DbType="Int")]
		public System.Nullable<int> IdTransport
		{
			get
			{
				return this._IdTransport;
			}
			set
			{
				if ((this._IdTransport != value))
				{
					this.OnIdTransportChanging(value);
					this.SendPropertyChanging();
					this._IdTransport = value;
					this.SendPropertyChanged("IdTransport");
					this.OnIdTransportChanged();
				}
			}
		}
		
		[Column(Storage="_OwnerUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerUserId
		{
			get
			{
				return this._OwnerUserId;
			}
			set
			{
				if ((this._OwnerUserId != value))
				{
					if (this._cov_UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerUserIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerUserId = value;
					this.SendPropertyChanged("OwnerUserId");
					this.OnOwnerUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_Visites", DbType="Int NOT NULL")]
		public int Visites
		{
			get
			{
				return this._Visites;
			}
			set
			{
				if ((this._Visites != value))
				{
					this.OnVisitesChanging(value);
					this.SendPropertyChanging();
					this._Visites = value;
					this.SendPropertyChanged("Visites");
					this.OnVisitesChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this.OnDateCreationChanging(value);
					this.SendPropertyChanging();
					this._DateCreation = value;
					this.SendPropertyChanged("DateCreation");
					this.OnDateCreationChanged();
				}
			}
		}
		
		[Column(Storage="_DateModification", DbType="DateTime NOT NULL")]
		public System.DateTime DateModification
		{
			get
			{
				return this._DateModification;
			}
			set
			{
				if ((this._DateModification != value))
				{
					this.OnDateModificationChanging(value);
					this.SendPropertyChanging();
					this._DateModification = value;
					this.SendPropertyChanged("DateModification");
					this.OnDateModificationChanged();
				}
			}
		}
		
		[Association(Name="cov_Projet_cov_AbonnementProjet", Storage="_cov_AbonnementProjets", ThisKey="IdProjet", OtherKey="IdProjet")]
		public EntitySet<cov_AbonnementProjet> cov_AbonnementProjets
		{
			get
			{
				return this._cov_AbonnementProjets;
			}
			set
			{
				this._cov_AbonnementProjets.Assign(value);
			}
		}
		
		[Association(Name="cov_Projet_cov_Transport", Storage="_cov_Transports", ThisKey="IdProjet", OtherKey="IdProjet")]
		public EntitySet<cov_Transport> cov_Transports
		{
			get
			{
				return this._cov_Transports;
			}
			set
			{
				this._cov_Transports.Assign(value);
			}
		}
		
		[Association(Name="cov_Projet_cov_MessagePrive", Storage="_cov_MessagePrives", ThisKey="IdProjet", OtherKey="IdProjet")]
		public EntitySet<cov_MessagePrive> cov_MessagePrives
		{
			get
			{
				return this._cov_MessagePrives;
			}
			set
			{
				this._cov_MessagePrives.Assign(value);
			}
		}
		
		[Association(Name="cov_Residence_cov_Projet", Storage="_cov_Residence", ThisKey="IdResidence", OtherKey="IdResidence", IsForeignKey=true, DeleteRule="SET NULL")]
		public cov_Residence cov_Residence
		{
			get
			{
				return this._cov_Residence.Entity;
			}
			set
			{
				cov_Residence previousValue = this._cov_Residence.Entity;
				if (((previousValue != value) 
							|| (this._cov_Residence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_Residence.Entity = null;
						previousValue.cov_Projets.Remove(this);
					}
					this._cov_Residence.Entity = value;
					if ((value != null))
					{
						value.cov_Projets.Add(this);
						this._IdResidence = value.IdResidence;
					}
					else
					{
						this._IdResidence = default(Nullable<int>);
					}
					this.SendPropertyChanged("cov_Residence");
				}
			}
		}
		
		[Association(Name="ref_Pays_cov_Projet", Storage="_ref_Pays", ThisKey="IdPaysArrive", OtherKey="IdPays", IsForeignKey=true)]
		public ref_Pays ref_Pays
		{
			get
			{
				return this._ref_Pays.Entity;
			}
			set
			{
				ref_Pays previousValue = this._ref_Pays.Entity;
				if (((previousValue != value) 
							|| (this._ref_Pays.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ref_Pays.Entity = null;
						previousValue.cov_Projets.Remove(this);
					}
					this._ref_Pays.Entity = value;
					if ((value != null))
					{
						value.cov_Projets.Add(this);
						this._IdPaysArrive = value.IdPays;
					}
					else
					{
						this._IdPaysArrive = default(int);
					}
					this.SendPropertyChanged("ref_Pays");
				}
			}
		}
		
		[Association(Name="ref_Pays_cov_Projet1", Storage="_ref_Pays1", ThisKey="IdPaysDepart", OtherKey="IdPays", IsForeignKey=true)]
		public ref_Pays ref_Pays1
		{
			get
			{
				return this._ref_Pays1.Entity;
			}
			set
			{
				ref_Pays previousValue = this._ref_Pays1.Entity;
				if (((previousValue != value) 
							|| (this._ref_Pays1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ref_Pays1.Entity = null;
						previousValue.cov_Projets1.Remove(this);
					}
					this._ref_Pays1.Entity = value;
					if ((value != null))
					{
						value.cov_Projets1.Add(this);
						this._IdPaysDepart = value.IdPays;
					}
					else
					{
						this._IdPaysDepart = default(int);
					}
					this.SendPropertyChanged("ref_Pays1");
				}
			}
		}
		
		[Association(Name="cov_UserProfile_cov_Projet", Storage="_cov_UserProfile", ThisKey="OwnerUserId", OtherKey="UserId", IsForeignKey=true)]
		public cov_UserProfile cov_UserProfile
		{
			get
			{
				return this._cov_UserProfile.Entity;
			}
			set
			{
				cov_UserProfile previousValue = this._cov_UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._cov_UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_UserProfile.Entity = null;
						previousValue.cov_Projets.Remove(this);
					}
					this._cov_UserProfile.Entity = value;
					if ((value != null))
					{
						value.cov_Projets.Add(this);
						this._OwnerUserId = value.UserId;
					}
					else
					{
						this._OwnerUserId = default(System.Guid);
					}
					this.SendPropertyChanged("cov_UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cov_AbonnementProjets(cov_AbonnementProjet entity)
		{
			this.SendPropertyChanging();
			entity.cov_Projet = this;
		}
		
		private void detach_cov_AbonnementProjets(cov_AbonnementProjet entity)
		{
			this.SendPropertyChanging();
			entity.cov_Projet = null;
		}
		
		private void attach_cov_Transports(cov_Transport entity)
		{
			this.SendPropertyChanging();
			entity.cov_Projet = this;
		}
		
		private void detach_cov_Transports(cov_Transport entity)
		{
			this.SendPropertyChanging();
			entity.cov_Projet = null;
		}
		
		private void attach_cov_MessagePrives(cov_MessagePrive entity)
		{
			this.SendPropertyChanging();
			entity.cov_Projet = this;
		}
		
		private void detach_cov_MessagePrives(cov_MessagePrive entity)
		{
			this.SendPropertyChanging();
			entity.cov_Projet = null;
		}
	}
	
	[Table(Name="dbo.cov_Transport")]
	public partial class cov_Transport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTransport;
		
		private int _IdProjet;
		
		private string _Mode;
		
		private string _Compagnie;
		
		private string _NumVol;
		
		private double _PrixAR;
		
		private string _Details;
		
		private EntityRef<cov_Projet> _cov_Projet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTransportChanging(int value);
    partial void OnIdTransportChanged();
    partial void OnIdProjetChanging(int value);
    partial void OnIdProjetChanged();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnCompagnieChanging(string value);
    partial void OnCompagnieChanged();
    partial void OnNumVolChanging(string value);
    partial void OnNumVolChanged();
    partial void OnPrixARChanging(double value);
    partial void OnPrixARChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public cov_Transport()
		{
			this._cov_Projet = default(EntityRef<cov_Projet>);
			OnCreated();
		}
		
		[Column(Storage="_IdTransport", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTransport
		{
			get
			{
				return this._IdTransport;
			}
			set
			{
				if ((this._IdTransport != value))
				{
					this.OnIdTransportChanging(value);
					this.SendPropertyChanging();
					this._IdTransport = value;
					this.SendPropertyChanged("IdTransport");
					this.OnIdTransportChanged();
				}
			}
		}
		
		[Column(Storage="_IdProjet", DbType="Int NOT NULL")]
		public int IdProjet
		{
			get
			{
				return this._IdProjet;
			}
			set
			{
				if ((this._IdProjet != value))
				{
					if (this._cov_Projet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProjetChanging(value);
					this.SendPropertyChanging();
					this._IdProjet = value;
					this.SendPropertyChanged("IdProjet");
					this.OnIdProjetChanged();
				}
			}
		}
		
		[Column(Storage="_Mode", DbType="NVarChar(50)")]
		public string Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[Column(Storage="_Compagnie", DbType="NVarChar(50)")]
		public string Compagnie
		{
			get
			{
				return this._Compagnie;
			}
			set
			{
				if ((this._Compagnie != value))
				{
					this.OnCompagnieChanging(value);
					this.SendPropertyChanging();
					this._Compagnie = value;
					this.SendPropertyChanged("Compagnie");
					this.OnCompagnieChanged();
				}
			}
		}
		
		[Column(Storage="_NumVol", DbType="NVarChar(50)")]
		public string NumVol
		{
			get
			{
				return this._NumVol;
			}
			set
			{
				if ((this._NumVol != value))
				{
					this.OnNumVolChanging(value);
					this.SendPropertyChanging();
					this._NumVol = value;
					this.SendPropertyChanged("NumVol");
					this.OnNumVolChanged();
				}
			}
		}
		
		[Column(Storage="_PrixAR", DbType="Float NOT NULL")]
		public double PrixAR
		{
			get
			{
				return this._PrixAR;
			}
			set
			{
				if ((this._PrixAR != value))
				{
					this.OnPrixARChanging(value);
					this.SendPropertyChanging();
					this._PrixAR = value;
					this.SendPropertyChanged("PrixAR");
					this.OnPrixARChanged();
				}
			}
		}
		
		[Column(Storage="_Details", DbType="NVarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[Association(Name="cov_Projet_cov_Transport", Storage="_cov_Projet", ThisKey="IdProjet", OtherKey="IdProjet", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public cov_Projet cov_Projet
		{
			get
			{
				return this._cov_Projet.Entity;
			}
			set
			{
				cov_Projet previousValue = this._cov_Projet.Entity;
				if (((previousValue != value) 
							|| (this._cov_Projet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_Projet.Entity = null;
						previousValue.cov_Transports.Remove(this);
					}
					this._cov_Projet.Entity = value;
					if ((value != null))
					{
						value.cov_Transports.Add(this);
						this._IdProjet = value.IdProjet;
					}
					else
					{
						this._IdProjet = default(int);
					}
					this.SendPropertyChanged("cov_Projet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.cov_UserProfile")]
	public partial class cov_UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _Nom;
		
		private string _Prenom;
		
		private bool _Sexe;
		
		private string _Ville;
		
		private string _NumDept;
		
		private System.DateTime _DateNaiss;
		
		private bool _PublicMail;
		
		private string _SelfDesc;
		
		private string _ImagePersoPath;
		
		private System.Nullable<System.Guid> _ActivationKey;
		
		private EntitySet<cov_AbonnementProjet> _cov_AbonnementProjets;
		
		private EntitySet<cov_Alerte> _cov_Alertes;
		
		private EntitySet<cov_Projet> _cov_Projets;
		
		private EntitySet<cov_MessagePrive> _cov_MessagePrives;
		
		private EntitySet<cov_MessagePrive> _cov_MessagePrives1;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<ref_Departement> _ref_Departement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnSexeChanging(bool value);
    partial void OnSexeChanged();
    partial void OnVilleChanging(string value);
    partial void OnVilleChanged();
    partial void OnNumDeptChanging(string value);
    partial void OnNumDeptChanged();
    partial void OnDateNaissChanging(System.DateTime value);
    partial void OnDateNaissChanged();
    partial void OnPublicMailChanging(bool value);
    partial void OnPublicMailChanged();
    partial void OnSelfDescChanging(string value);
    partial void OnSelfDescChanged();
    partial void OnImagePersoPathChanging(string value);
    partial void OnImagePersoPathChanged();
    partial void OnActivationKeyChanging(System.Nullable<System.Guid> value);
    partial void OnActivationKeyChanged();
    #endregion
		
		public cov_UserProfile()
		{
			this._cov_AbonnementProjets = new EntitySet<cov_AbonnementProjet>(new Action<cov_AbonnementProjet>(this.attach_cov_AbonnementProjets), new Action<cov_AbonnementProjet>(this.detach_cov_AbonnementProjets));
			this._cov_Alertes = new EntitySet<cov_Alerte>(new Action<cov_Alerte>(this.attach_cov_Alertes), new Action<cov_Alerte>(this.detach_cov_Alertes));
			this._cov_Projets = new EntitySet<cov_Projet>(new Action<cov_Projet>(this.attach_cov_Projets), new Action<cov_Projet>(this.detach_cov_Projets));
			this._cov_MessagePrives = new EntitySet<cov_MessagePrive>(new Action<cov_MessagePrive>(this.attach_cov_MessagePrives), new Action<cov_MessagePrive>(this.detach_cov_MessagePrives));
			this._cov_MessagePrives1 = new EntitySet<cov_MessagePrive>(new Action<cov_MessagePrive>(this.attach_cov_MessagePrives1), new Action<cov_MessagePrive>(this.detach_cov_MessagePrives1));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._ref_Departement = default(EntityRef<ref_Departement>);
			OnCreated();
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nom", DbType="NVarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[Column(Storage="_Prenom", DbType="NVarChar(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[Column(Storage="_Sexe", DbType="Bit NOT NULL")]
		public bool Sexe
		{
			get
			{
				return this._Sexe;
			}
			set
			{
				if ((this._Sexe != value))
				{
					this.OnSexeChanging(value);
					this.SendPropertyChanging();
					this._Sexe = value;
					this.SendPropertyChanged("Sexe");
					this.OnSexeChanged();
				}
			}
		}
		
		[Column(Storage="_Ville", DbType="NVarChar(50)")]
		public string Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				if ((this._Ville != value))
				{
					this.OnVilleChanging(value);
					this.SendPropertyChanging();
					this._Ville = value;
					this.SendPropertyChanged("Ville");
					this.OnVilleChanged();
				}
			}
		}
		
		[Column(Storage="_NumDept", DbType="VarChar(3)")]
		public string NumDept
		{
			get
			{
				return this._NumDept;
			}
			set
			{
				if ((this._NumDept != value))
				{
					if (this._ref_Departement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumDeptChanging(value);
					this.SendPropertyChanging();
					this._NumDept = value;
					this.SendPropertyChanged("NumDept");
					this.OnNumDeptChanged();
				}
			}
		}
		
		[Column(Storage="_DateNaiss", DbType="DateTime NOT NULL")]
		public System.DateTime DateNaiss
		{
			get
			{
				return this._DateNaiss;
			}
			set
			{
				if ((this._DateNaiss != value))
				{
					this.OnDateNaissChanging(value);
					this.SendPropertyChanging();
					this._DateNaiss = value;
					this.SendPropertyChanged("DateNaiss");
					this.OnDateNaissChanged();
				}
			}
		}
		
		[Column(Storage="_PublicMail", DbType="Bit NOT NULL")]
		public bool PublicMail
		{
			get
			{
				return this._PublicMail;
			}
			set
			{
				if ((this._PublicMail != value))
				{
					this.OnPublicMailChanging(value);
					this.SendPropertyChanging();
					this._PublicMail = value;
					this.SendPropertyChanged("PublicMail");
					this.OnPublicMailChanged();
				}
			}
		}
		
		[Column(Storage="_SelfDesc", DbType="NVarChar(MAX)")]
		public string SelfDesc
		{
			get
			{
				return this._SelfDesc;
			}
			set
			{
				if ((this._SelfDesc != value))
				{
					this.OnSelfDescChanging(value);
					this.SendPropertyChanging();
					this._SelfDesc = value;
					this.SendPropertyChanged("SelfDesc");
					this.OnSelfDescChanged();
				}
			}
		}
		
		[Column(Storage="_ImagePersoPath", DbType="VarChar(255)")]
		public string ImagePersoPath
		{
			get
			{
				return this._ImagePersoPath;
			}
			set
			{
				if ((this._ImagePersoPath != value))
				{
					this.OnImagePersoPathChanging(value);
					this.SendPropertyChanging();
					this._ImagePersoPath = value;
					this.SendPropertyChanged("ImagePersoPath");
					this.OnImagePersoPathChanged();
				}
			}
		}
		
		[Column(Storage="_ActivationKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ActivationKey
		{
			get
			{
				return this._ActivationKey;
			}
			set
			{
				if ((this._ActivationKey != value))
				{
					this.OnActivationKeyChanging(value);
					this.SendPropertyChanging();
					this._ActivationKey = value;
					this.SendPropertyChanged("ActivationKey");
					this.OnActivationKeyChanged();
				}
			}
		}
		
		[Association(Name="cov_UserProfile_cov_AbonnementProjet", Storage="_cov_AbonnementProjets", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<cov_AbonnementProjet> cov_AbonnementProjets
		{
			get
			{
				return this._cov_AbonnementProjets;
			}
			set
			{
				this._cov_AbonnementProjets.Assign(value);
			}
		}
		
		[Association(Name="cov_UserProfile_cov_Alerte", Storage="_cov_Alertes", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<cov_Alerte> cov_Alertes
		{
			get
			{
				return this._cov_Alertes;
			}
			set
			{
				this._cov_Alertes.Assign(value);
			}
		}
		
		[Association(Name="cov_UserProfile_cov_Projet", Storage="_cov_Projets", ThisKey="UserId", OtherKey="OwnerUserId")]
		public EntitySet<cov_Projet> cov_Projets
		{
			get
			{
				return this._cov_Projets;
			}
			set
			{
				this._cov_Projets.Assign(value);
			}
		}
		
		[Association(Name="cov_UserProfile_cov_MessagePrive", Storage="_cov_MessagePrives", ThisKey="UserId", OtherKey="FromUserId")]
		public EntitySet<cov_MessagePrive> cov_MessagePrives
		{
			get
			{
				return this._cov_MessagePrives;
			}
			set
			{
				this._cov_MessagePrives.Assign(value);
			}
		}
		
		[Association(Name="cov_UserProfile_cov_MessagePrive1", Storage="_cov_MessagePrives1", ThisKey="UserId", OtherKey="ToUserId")]
		public EntitySet<cov_MessagePrive> cov_MessagePrives1
		{
			get
			{
				return this._cov_MessagePrives1;
			}
			set
			{
				this._cov_MessagePrives1.Assign(value);
			}
		}
		
		[Association(Name="aspnet_User_cov_UserProfile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.cov_UserProfile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.cov_UserProfile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[Association(Name="ref_Departement_cov_UserProfile", Storage="_ref_Departement", ThisKey="NumDept", OtherKey="NumDept", IsForeignKey=true)]
		public ref_Departement ref_Departement
		{
			get
			{
				return this._ref_Departement.Entity;
			}
			set
			{
				ref_Departement previousValue = this._ref_Departement.Entity;
				if (((previousValue != value) 
							|| (this._ref_Departement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ref_Departement.Entity = null;
						previousValue.cov_UserProfiles.Remove(this);
					}
					this._ref_Departement.Entity = value;
					if ((value != null))
					{
						value.cov_UserProfiles.Add(this);
						this._NumDept = value.NumDept;
					}
					else
					{
						this._NumDept = default(string);
					}
					this.SendPropertyChanged("ref_Departement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cov_AbonnementProjets(cov_AbonnementProjet entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile = this;
		}
		
		private void detach_cov_AbonnementProjets(cov_AbonnementProjet entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile = null;
		}
		
		private void attach_cov_Alertes(cov_Alerte entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile = this;
		}
		
		private void detach_cov_Alertes(cov_Alerte entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile = null;
		}
		
		private void attach_cov_Projets(cov_Projet entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile = this;
		}
		
		private void detach_cov_Projets(cov_Projet entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile = null;
		}
		
		private void attach_cov_MessagePrives(cov_MessagePrive entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile = this;
		}
		
		private void detach_cov_MessagePrives(cov_MessagePrive entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile = null;
		}
		
		private void attach_cov_MessagePrives1(cov_MessagePrive entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile1 = this;
		}
		
		private void detach_cov_MessagePrives1(cov_MessagePrive entity)
		{
			this.SendPropertyChanging();
			entity.cov_UserProfile1 = null;
		}
	}
	
	[Table(Name="dbo.cov_MessagePrive")]
	public partial class cov_MessagePrive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MsgId;
		
		private System.Nullable<byte> _TypeMessage;
		
		private System.Guid _FromUserId;
		
		private System.Guid _ToUserId;
		
		private System.DateTime _DateMessage;
		
		private string _Ip;
		
		private bool _IsFromNewMessage;
		
		private bool _IsToNewMessage;
		
		private string _Subject;
		
		private string _Text;
		
		private System.Nullable<int> _IdProjet;
		
		private System.Nullable<int> _MsgResponseId;
		
		private bool _IToUserDeleted;
		
		private bool _IFromUserDeleted;
		
		private bool _OToUserDeleted;
		
		private bool _OFromUserDeleted;
		
		private EntitySet<cov_MessagePrive> _cov_MessagePrives;
		
		private EntityRef<cov_UserProfile> _cov_UserProfile;
		
		private EntityRef<cov_UserProfile> _cov_UserProfile1;
		
		private EntityRef<cov_MessagePrive> _cov_MessagePrive1;
		
		private EntityRef<cov_Projet> _cov_Projet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMsgIdChanging(int value);
    partial void OnMsgIdChanged();
    partial void OnTypeMessageChanging(System.Nullable<byte> value);
    partial void OnTypeMessageChanged();
    partial void OnFromUserIdChanging(System.Guid value);
    partial void OnFromUserIdChanged();
    partial void OnToUserIdChanging(System.Guid value);
    partial void OnToUserIdChanged();
    partial void OnDateMessageChanging(System.DateTime value);
    partial void OnDateMessageChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnIsFromNewMessageChanging(bool value);
    partial void OnIsFromNewMessageChanged();
    partial void OnIsToNewMessageChanging(bool value);
    partial void OnIsToNewMessageChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnIdProjetChanging(System.Nullable<int> value);
    partial void OnIdProjetChanged();
    partial void OnMsgResponseIdChanging(System.Nullable<int> value);
    partial void OnMsgResponseIdChanged();
    partial void OnIToUserDeletedChanging(bool value);
    partial void OnIToUserDeletedChanged();
    partial void OnIFromUserDeletedChanging(bool value);
    partial void OnIFromUserDeletedChanged();
    partial void OnOToUserDeletedChanging(bool value);
    partial void OnOToUserDeletedChanged();
    partial void OnOFromUserDeletedChanging(bool value);
    partial void OnOFromUserDeletedChanged();
    #endregion
		
		public cov_MessagePrive()
		{
			this._cov_MessagePrives = new EntitySet<cov_MessagePrive>(new Action<cov_MessagePrive>(this.attach_cov_MessagePrives), new Action<cov_MessagePrive>(this.detach_cov_MessagePrives));
			this._cov_UserProfile = default(EntityRef<cov_UserProfile>);
			this._cov_UserProfile1 = default(EntityRef<cov_UserProfile>);
			this._cov_MessagePrive1 = default(EntityRef<cov_MessagePrive>);
			this._cov_Projet = default(EntityRef<cov_Projet>);
			OnCreated();
		}
		
		[Column(Storage="_MsgId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MsgId
		{
			get
			{
				return this._MsgId;
			}
			set
			{
				if ((this._MsgId != value))
				{
					this.OnMsgIdChanging(value);
					this.SendPropertyChanging();
					this._MsgId = value;
					this.SendPropertyChanged("MsgId");
					this.OnMsgIdChanged();
				}
			}
		}
		
		[Column(Storage="_TypeMessage", DbType="TinyInt")]
		public System.Nullable<byte> TypeMessage
		{
			get
			{
				return this._TypeMessage;
			}
			set
			{
				if ((this._TypeMessage != value))
				{
					this.OnTypeMessageChanging(value);
					this.SendPropertyChanging();
					this._TypeMessage = value;
					this.SendPropertyChanged("TypeMessage");
					this.OnTypeMessageChanged();
				}
			}
		}
		
		[Column(Storage="_FromUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FromUserId
		{
			get
			{
				return this._FromUserId;
			}
			set
			{
				if ((this._FromUserId != value))
				{
					if (this._cov_UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromUserIdChanging(value);
					this.SendPropertyChanging();
					this._FromUserId = value;
					this.SendPropertyChanged("FromUserId");
					this.OnFromUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_ToUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ToUserId
		{
			get
			{
				return this._ToUserId;
			}
			set
			{
				if ((this._ToUserId != value))
				{
					if (this._cov_UserProfile1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToUserIdChanging(value);
					this.SendPropertyChanging();
					this._ToUserId = value;
					this.SendPropertyChanged("ToUserId");
					this.OnToUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_DateMessage", DbType="DateTime NOT NULL")]
		public System.DateTime DateMessage
		{
			get
			{
				return this._DateMessage;
			}
			set
			{
				if ((this._DateMessage != value))
				{
					this.OnDateMessageChanging(value);
					this.SendPropertyChanging();
					this._DateMessage = value;
					this.SendPropertyChanged("DateMessage");
					this.OnDateMessageChanged();
				}
			}
		}
		
		[Column(Storage="_Ip", DbType="VarChar(15)")]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[Column(Storage="_IsFromNewMessage", DbType="Bit NOT NULL")]
		public bool IsFromNewMessage
		{
			get
			{
				return this._IsFromNewMessage;
			}
			set
			{
				if ((this._IsFromNewMessage != value))
				{
					this.OnIsFromNewMessageChanging(value);
					this.SendPropertyChanging();
					this._IsFromNewMessage = value;
					this.SendPropertyChanged("IsFromNewMessage");
					this.OnIsFromNewMessageChanged();
				}
			}
		}
		
		[Column(Storage="_IsToNewMessage", DbType="Bit NOT NULL")]
		public bool IsToNewMessage
		{
			get
			{
				return this._IsToNewMessage;
			}
			set
			{
				if ((this._IsToNewMessage != value))
				{
					this.OnIsToNewMessageChanging(value);
					this.SendPropertyChanging();
					this._IsToNewMessage = value;
					this.SendPropertyChanged("IsToNewMessage");
					this.OnIsToNewMessageChanged();
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="NVarChar(255)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[Column(Storage="_IdProjet", DbType="Int")]
		public System.Nullable<int> IdProjet
		{
			get
			{
				return this._IdProjet;
			}
			set
			{
				if ((this._IdProjet != value))
				{
					if (this._cov_Projet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProjetChanging(value);
					this.SendPropertyChanging();
					this._IdProjet = value;
					this.SendPropertyChanged("IdProjet");
					this.OnIdProjetChanged();
				}
			}
		}
		
		[Column(Storage="_MsgResponseId", DbType="Int")]
		public System.Nullable<int> MsgResponseId
		{
			get
			{
				return this._MsgResponseId;
			}
			set
			{
				if ((this._MsgResponseId != value))
				{
					if (this._cov_MessagePrive1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMsgResponseIdChanging(value);
					this.SendPropertyChanging();
					this._MsgResponseId = value;
					this.SendPropertyChanged("MsgResponseId");
					this.OnMsgResponseIdChanged();
				}
			}
		}
		
		[Column(Storage="_IToUserDeleted", DbType="Bit NOT NULL")]
		public bool IToUserDeleted
		{
			get
			{
				return this._IToUserDeleted;
			}
			set
			{
				if ((this._IToUserDeleted != value))
				{
					this.OnIToUserDeletedChanging(value);
					this.SendPropertyChanging();
					this._IToUserDeleted = value;
					this.SendPropertyChanged("IToUserDeleted");
					this.OnIToUserDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_IFromUserDeleted", DbType="Bit NOT NULL")]
		public bool IFromUserDeleted
		{
			get
			{
				return this._IFromUserDeleted;
			}
			set
			{
				if ((this._IFromUserDeleted != value))
				{
					this.OnIFromUserDeletedChanging(value);
					this.SendPropertyChanging();
					this._IFromUserDeleted = value;
					this.SendPropertyChanged("IFromUserDeleted");
					this.OnIFromUserDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_OToUserDeleted", DbType="Bit NOT NULL")]
		public bool OToUserDeleted
		{
			get
			{
				return this._OToUserDeleted;
			}
			set
			{
				if ((this._OToUserDeleted != value))
				{
					this.OnOToUserDeletedChanging(value);
					this.SendPropertyChanging();
					this._OToUserDeleted = value;
					this.SendPropertyChanged("OToUserDeleted");
					this.OnOToUserDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_OFromUserDeleted", DbType="Bit NOT NULL")]
		public bool OFromUserDeleted
		{
			get
			{
				return this._OFromUserDeleted;
			}
			set
			{
				if ((this._OFromUserDeleted != value))
				{
					this.OnOFromUserDeletedChanging(value);
					this.SendPropertyChanging();
					this._OFromUserDeleted = value;
					this.SendPropertyChanged("OFromUserDeleted");
					this.OnOFromUserDeletedChanged();
				}
			}
		}
		
		[Association(Name="cov_MessagePrive_cov_MessagePrive", Storage="_cov_MessagePrives", ThisKey="MsgId", OtherKey="MsgResponseId")]
		public EntitySet<cov_MessagePrive> cov_MessagePrives
		{
			get
			{
				return this._cov_MessagePrives;
			}
			set
			{
				this._cov_MessagePrives.Assign(value);
			}
		}
		
		[Association(Name="cov_UserProfile_cov_MessagePrive", Storage="_cov_UserProfile", ThisKey="FromUserId", OtherKey="UserId", IsForeignKey=true)]
		public cov_UserProfile cov_UserProfile
		{
			get
			{
				return this._cov_UserProfile.Entity;
			}
			set
			{
				cov_UserProfile previousValue = this._cov_UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._cov_UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_UserProfile.Entity = null;
						previousValue.cov_MessagePrives.Remove(this);
					}
					this._cov_UserProfile.Entity = value;
					if ((value != null))
					{
						value.cov_MessagePrives.Add(this);
						this._FromUserId = value.UserId;
					}
					else
					{
						this._FromUserId = default(System.Guid);
					}
					this.SendPropertyChanged("cov_UserProfile");
				}
			}
		}
		
		[Association(Name="cov_UserProfile_cov_MessagePrive1", Storage="_cov_UserProfile1", ThisKey="ToUserId", OtherKey="UserId", IsForeignKey=true)]
		public cov_UserProfile cov_UserProfile1
		{
			get
			{
				return this._cov_UserProfile1.Entity;
			}
			set
			{
				cov_UserProfile previousValue = this._cov_UserProfile1.Entity;
				if (((previousValue != value) 
							|| (this._cov_UserProfile1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_UserProfile1.Entity = null;
						previousValue.cov_MessagePrives1.Remove(this);
					}
					this._cov_UserProfile1.Entity = value;
					if ((value != null))
					{
						value.cov_MessagePrives1.Add(this);
						this._ToUserId = value.UserId;
					}
					else
					{
						this._ToUserId = default(System.Guid);
					}
					this.SendPropertyChanged("cov_UserProfile1");
				}
			}
		}
		
		[Association(Name="cov_MessagePrive_cov_MessagePrive", Storage="_cov_MessagePrive1", ThisKey="MsgResponseId", OtherKey="MsgId", IsForeignKey=true)]
		public cov_MessagePrive cov_MessagePrive1
		{
			get
			{
				return this._cov_MessagePrive1.Entity;
			}
			set
			{
				cov_MessagePrive previousValue = this._cov_MessagePrive1.Entity;
				if (((previousValue != value) 
							|| (this._cov_MessagePrive1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_MessagePrive1.Entity = null;
						previousValue.cov_MessagePrives.Remove(this);
					}
					this._cov_MessagePrive1.Entity = value;
					if ((value != null))
					{
						value.cov_MessagePrives.Add(this);
						this._MsgResponseId = value.MsgId;
					}
					else
					{
						this._MsgResponseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("cov_MessagePrive1");
				}
			}
		}
		
		[Association(Name="cov_Projet_cov_MessagePrive", Storage="_cov_Projet", ThisKey="IdProjet", OtherKey="IdProjet", IsForeignKey=true, DeleteRule="SET NULL")]
		public cov_Projet cov_Projet
		{
			get
			{
				return this._cov_Projet.Entity;
			}
			set
			{
				cov_Projet previousValue = this._cov_Projet.Entity;
				if (((previousValue != value) 
							|| (this._cov_Projet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cov_Projet.Entity = null;
						previousValue.cov_MessagePrives.Remove(this);
					}
					this._cov_Projet.Entity = value;
					if ((value != null))
					{
						value.cov_MessagePrives.Add(this);
						this._IdProjet = value.IdProjet;
					}
					else
					{
						this._IdProjet = default(Nullable<int>);
					}
					this.SendPropertyChanged("cov_Projet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cov_MessagePrives(cov_MessagePrive entity)
		{
			this.SendPropertyChanging();
			entity.cov_MessagePrive1 = this;
		}
		
		private void detach_cov_MessagePrives(cov_MessagePrive entity)
		{
			this.SendPropertyChanging();
			entity.cov_MessagePrive1 = null;
		}
	}
}
#pragma warning restore 1591
